@model Brandedkart.DTO.User.OrderDetailsDTO

<div class="container">
    <div class="py-5 text-center">
       
        <h2 class="fw-bolder">Checkout Form</h2>
    </div>

    <div class="row g-5">
        <div class="col-md-5 col-lg-4 order-md-last">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-primary">Your cart</span>
                <span class="badge bg-primary rounded-pill">@ViewBag.CartItemsCount</span>
            </h4>
            <ul class="list-group mb-3">


                @foreach (var item in Model.customerOrderProducts.CartItems)
                {
                    { Html.RenderPartial("_CartCardTwo", item); }
                }

                <li class="list-group-item d-flex justify-content-between bg-light">
                    <div class="text-success">
                        <h6 class="my-0">Promo code</h6>
                        <small>EXAMPLECODE</small>
                    </div>
                    <span class="text-success">−OMR 2</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total (OMR)</span>
                    <strong>@Model.customerOrderProducts.Total</strong>
                </li>
            </ul>

            <form class="card p-2">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Promo code">
                    <button type="submit" class="btn btn-secondary mt-3">Redeem</button>
                </div>
            </form>
        </div>
        <div class="col-md-7 col-lg-8">
            <br />
            @Html.ValidationSummary(false)
            <br />
            <h4 class="mb-3 fw-bold">Billing address</h4>
            @using (Html.BeginForm("", "Checkout", new { area = "" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="row g-3">
                    <div class="col-sm-6">
                        @Html.LabelFor(cust => cust.address.AddressLine1, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.address.AddressLine1, new { @class = "form-control form-control-lg", placeholder = "1234 Main St" })
                        @Html.ValidationMessageFor(cust => cust.address.AddressLine1)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(cust => cust.address.AddressLine2, new { @class = "form-label" })<span class="text-muted">(Optional)</span>
                        @Html.TextBoxFor(cust => cust.address.AddressLine2, new { @class = "form-control form-control-lg", placeholder = "Apartment or suite" })
                        @Html.ValidationMessageFor(cust => cust.address.AddressLine2)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(cust => cust.address.Country, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.address.Country, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.address.Country)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(cust => cust.address.State, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.address.State, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.address.State)
                    </div>

                    <div class="col-sm-6">
                        @Html.LabelFor(cust => cust.address.City, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.address.City, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.address.City)
                    </div>




                    <div class="col-md-3">
                        @Html.LabelFor(cust => cust.address.Postal, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.address.Postal, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.address.Postal)
                    </div>
                </div>

                <hr class="my-4">



                <h4 class="mb-3 fw-bold my-5">Bank Details</h4>

                <div class="my-3">
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(cust => cust.orderdetails.Payment_Type, Brandedkart.DTO.User.PaymentType.CreditCard, new { @class = "form-check-input" })
                        <label class="form-check-label">Credit Card</label>
                    </div>
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(cust => cust.orderdetails.Payment_Type, Brandedkart.DTO.User.PaymentType.DebitCard, new { @class = "form-check-input" })
                        <label class="form-check-label">Debit Card</label>
                    </div>


                </div>

                <div class="row gy-3">
                    <div class="col-md-6">
                        @Html.LabelFor(cust => cust.transactionDetails.NameOnCard, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.transactionDetails.NameOnCard, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.transactionDetails.NameOnCard)
                        <div><small class="text-muted">Full name as displayed on card</small></div>

                    </div>

                    <div class="col-md-6">
                        @Html.LabelFor(cust => cust.transactionDetails.CardNumber, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.transactionDetails.CardNumber, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.transactionDetails.CardNumber)
                    </div>

                    <div class="col-md-3 datepicker expiry-datepicker">
                        @Html.LabelFor(cust => cust.transactionDetails.ExpirationDate, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.transactionDetails.ExpirationDate, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.transactionDetails.ExpirationDate)
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(cust => cust.transactionDetails.CVV, new { @class = "form-label" })
                        @Html.TextBoxFor(cust => cust.transactionDetails.CVV, new { @class = "form-control form-control-lg" })
                        @Html.ValidationMessageFor(cust => cust.transactionDetails.CVV)
                    </div>
                </div>

                <hr class="my-4">

                <button class="w-100 btn btn-primary btn-lg" type="submit">Continue to checkout</button>
            }
            @Html.ActionLink("Payment with PayPal", "", "PaymentWithPayPal", new { area = "" }, new { @class = "w-100 btn btn-primary btn-lg mt-5" })

        </div>
    </div>
</div>
@section StyleSheets{
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.13.2/themes/dark-hive/jquery-ui.css" rel="stylesheet" />
}


@section scripts{
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/lib/jqueryui/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#transactionDetails_ExpirationDate").datepicker(
                {
                    dateFormat: "dd/mm/yy",

                }
            );
        })
    </script>
}

<style>
    span.field-validation-error {
        color: red !important;
    }

    span #Full_Name-error {
        color: red !important;
    }

    .field-validation-valid {
        color: red !important;
    }

    .input-validation-error {
        border: 1px solid #ff0000 !important;
        background-color: #ffeeee !important;
    }
</style>